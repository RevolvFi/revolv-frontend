/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC4626Relayer,
  ERC4626RelayerInterface,
} from "./ERC4626Relayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "VaultDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "VaultRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.SwapKind",
        name: "kind",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "assetInIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "assetOutIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.BatchSwapStep[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IAsset[]",
        name: "assets",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "int256[]",
        name: "limits",
        type: "int256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "batchSwap",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
    ],
    name: "deregisterVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "getAssetForVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getVaultsForAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
    ],
    name: "registerVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "assetIn",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "assetOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.SingleSwap",
        name: "singleSwap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620029ea380380620029ea833981016040819052620000349162000095565b6001600160601b0319606082901b1660805260016000908155600380546001600160a01b031916339081179091556040518392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050620000c5565b600060208284031215620000a7578081fd5b81516001600160a01b0381168114620000be578182fd5b9392505050565b60805160601c612903620000e76000398060f45280610c7352506129036000f3fe6080604052600436106100e15760003560e01c80638d928af81161007f578063b95cac2811610059578063b95cac2814610266578063cea9d26f14610279578063e30c397814610299578063f2fde38b146102ae5761011f565b80638d928af81461021c5780638da5cb5b14610231578063945bcec9146102465761011f565b806352bbbe29116100bb57806352bbbe29146101a757806367ccd1cb146101c757806379ba5097146101e75780638bdb3913146101fc5761011f565b80631994c1b71461012457806338e270ed1461015a57806352842fb91461017a5761011f565b3661011f5761011d336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066102ce565b005b600080fd5b34801561013057600080fd5b5061014461013f366004611c66565b6102e0565b60405161015191906121a6565b60405180910390f35b34801561016657600080fd5b5061011d610175366004611c66565b610356565b34801561018657600080fd5b5061019a610195366004611c66565b61050f565b604051610151919061215f565b6101ba6101b5366004611ee2565b61052d565b6040516101519190612747565b3480156101d357600080fd5b5061011d6101e2366004611c66565b6106e2565b3480156101f357600080fd5b5061011d610838565b34801561020857600080fd5b5061011d610217366004611d5d565b6108c2565b34801561022857600080fd5b5061019a610c71565b34801561023d57600080fd5b5061019a610c95565b610259610254366004611e1c565b610ca4565b60405161015191906121f3565b61011d610274366004611dc7565b610dd6565b34801561028557600080fd5b5061011d610294366004611ddc565b610fd0565b3480156102a557600080fd5b5061019a61107a565b3480156102ba57600080fd5b5061011d6102c9366004611c66565b611089565b816102dc576102dc81611159565b5050565b6001600160a01b03811660009081526002602090815260409182902080548351818402810184019094528084526060939283018282801561034a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161032c575b50505050509050919050565b6003546001600160a01b031633146103895760405162461bcd60e51b81526004016103809061240b565b60405180910390fd5b6001600160a01b0380821660009081526001602052604090205416806103c15760405162461bcd60e51b8152600401610380906125ac565b6001600160a01b0381166000908152600260205260408120905b81548110156104b857836001600160a01b03168282815481106103fa57fe5b6000918252602090912001546001600160a01b031614156104b05781548290600019810190811061042757fe5b9060005260206000200160009054906101000a90046001600160a01b031682828154811061045157fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508180548061048957fe5b600082815260209020810160001990810180546001600160a01b03191690550190556104b8565b6001016103db565b506001600160a01b0380841660008181526001602052604080822080546001600160a01b031916905551928516927feca7f4241f8c1ded7555601c7971a3690c0100ad17c3bdab4999c3509a2d405d9190a3505050565b6001600160a01b039081166000908152600160205260409020541690565b60006105376111ac565b6040808501518682015160608801516001600160a01b0380831660009081526001602052949094205492939192909116158015906105a3576000808a60200151600181111561058257fe5b1461058d5787610593565b89608001515b90506105a13385838c6111c5565b505b6001600160a01b0382811660009081526001602052604090205416156105f0573060408901526060880151156105eb5760405162461bcd60e51b815260040161038090612648565b61060d565b8061060d5760405162461bcd60e51b815260040161038090612501565b610615610c71565b6001600160a01b03166352bbbe29348b8b8b8b6040518663ffffffff1660e01b8152600401610647949392919061267f565b6020604051808303818588803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106999190611fbb565b6001600160a01b0383811660009081526001602052604090205491965016156106c6576106c68285611208565b6106ce611316565b505050506106da61132a565b949350505050565b6003546001600160a01b0316331461070c5760405162461bcd60e51b81526004016103809061240b565b6000816001600160a01b03166338d52e0f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561074757600080fd5b505afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611c82565b6001600160a01b0383811660009081526001602052604090205491925016156107ba5760405162461bcd60e51b81526004016103809061254d565b6001600160a01b03808316600081815260016020818152604080842080549688166001600160a01b031997881681179091558085526002835281852080549485018155855291842090920180549095168417909455517ff8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb9190a35050565b6004546001600160a01b031633146108625760405162461bcd60e51b815260040161038090612442565b60038054600480546001600160a01b03198084166001600160a01b038381169190911795869055911690915560405191811692169082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6108ca6111ac565b6001600160a01b03831633146108f25760405162461bcd60e51b815260040161038090612584565b60606108fe8280612786565b905067ffffffffffffffff8111801561091657600080fd5b50604051908082528060200260200182016040528015610940578160200160208202803683370190505b50905060005b6109508380612786565b9050811015610a455760006109658480612786565b8381811061096f57fe5b90506020020160208101906109849190611c66565b6001600160a01b038082166000908152600160205260409020549192501615610a3c576040516370a0823160e01b81526001600160a01b038216906370a08231906109d390889060040161215f565b60206040518083038186803b1580156109eb57600080fd5b505afa1580156109ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a239190611fbb565b838381518110610a2f57fe5b6020026020010181815250505b50600101610946565b50610a4e610c71565b6001600160a01b0316638bdb3913868686866040518563ffffffff1660e01b8152600401610a7f94939291906122c2565b600060405180830381600087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b5050505060005b610abe8380612786565b9050811015610c61576000610ad38480612786565b83818110610add57fe5b9050602002016020810190610af29190611c66565b6001600160a01b038082166000908152600160205260409020549192501615610c58576040516370a0823160e01b81526000906001600160a01b038316906370a0823190610b4490899060040161215f565b60206040518083038186803b158015610b5c57600080fd5b505afa158015610b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b949190611fbb565b90506000610bbe858581518110610ba757fe5b60200260200101518361133190919063ffffffff16565b90508015610c5557610bd1878483611348565b604051635d043b2960e11b81526001600160a01b0384169063ba08765290610c019084908b903090600401612767565b602060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c539190611fbb565b505b50505b50600101610ab4565b5050610c6b61132a565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6003546001600160a01b031690565b6060610cae6111ac565b60408501516000610cc48b8b8b8b8b8b8b6113eb565b90506060610cd0610c71565b6001600160a01b031663945bcec9348f8f8f8f8f8f8f8f8f6040518b63ffffffff1660e01b8152600401610d0c999897969594939291906122fe565b6000604051808303818588803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610d629190810190611c9e565b905060008a8a84818110610d7257fe5b9050602002016020810190610d879190611c66565b6001600160a01b038082166000908152600160205260409020549192501615610db457610db48185611208565b610dbc611316565b5092505050610dc961132a565b9998505050505050505050565b610dde6111ac565b6001600160a01b0383163314610e065760405162461bcd60e51b815260040161038090612584565b60005b610e138280612786565b9050811015610f53576000600181610e2b8580612786565b85818110610e3557fe5b9050602002016020810190610e4a9190611c66565b6001600160a01b0390811682526020820192909252604001600020541690508015801590610e9557506000610e826020850185612786565b84818110610e8c57fe5b90506020020135115b15610f4a576000610ec48683610eae6020880188612786565b87818110610eb857fe5b9050602002013561154f565b60405163a9059cbb60e01b81529091506001600160a01b0383169063a9059cbb90610ef5908990859060040161218d565b602060405180830381600087803b158015610f0f57600080fd5b505af1158015610f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f479190611d41565b50505b50600101610e09565b50610f5c610c71565b6001600160a01b031663b95cac2834868686866040518663ffffffff1660e01b8152600401610f8e94939291906122c2565b6000604051808303818588803b158015610fa757600080fd5b505af1158015610fbb573d6000803e3d6000fd5b5050505050610fc8611316565b610c6b61132a565b6003546001600160a01b03163314610ffa5760405162461bcd60e51b81526004016103809061240b565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611028908590859060040161218d565b602060405180830381600087803b15801561104257600080fd5b505af1158015611056573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b9190611d41565b6004546001600160a01b031690565b6003546001600160a01b031633146110b35760405162461bcd60e51b81526004016103809061240b565b6001600160a01b0381166110d95760405162461bcd60e51b8152600401610380906125da565b6003546001600160a01b03828116911614156111075760405162461bcd60e51b815260040161038090612611565b600480546001600160a01b0319166001600160a01b03838116918217909255600354604051919216907f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270090600090a350565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6111be600260005414156101906102ce565b6002600055565b3081526020810151156111ea5760405162461bcd60e51b8152600401610380906124c0565b6111f584848461154f565b50610c6b83611202610c71565b84611807565b6040516370a0823160e01b81526000906001600160a01b038416906370a082319061123790309060040161215f565b60206040518083038186803b15801561124f57600080fd5b505afa158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190611fbb565b9050801561131157604051635d043b2960e11b81526001600160a01b0384169063ba087652906112bf90849086903090600401612767565b602060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b9190611fbb565b505050565b4780156113275761132733826118bd565b50565b6001600055565b600061133f83836001611937565b90505b92915050565b8061135257611311565b60408051600180825281830190925260609160208083019080368337019050509050828160008151811061138257fe5b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260609181602001602082028036833701905050905082816000815181106113cd57fe5b6020026020010181815250506113e485838361194d565b5050505050565b600080888860008181106113fb57fe5b905060200281019061140d91906127cd565b602001359050600087878381811061142157fe5b90506020020160208101906114369190611c66565b6001600160a01b038082166000908152600160205260409020549192501615158a8a600019810181811061146657fe5b905060200281019061147891906127cd565b604001359350600089898681811061148c57fe5b90506020020160208101906114a19190611c66565b6001600160a01b0380821660009081526001602052604090205460608b0151929350161515901580156114d657508860200151155b6114f25760405162461bcd60e51b815260040161038090612479565b8215611511576115053385878b8b611aa5565b6001600160a01b031689525b8015611522573060408a015261153f565b8261153f5760405162461bcd60e51b815260040161038090612501565b5050505050979650505050505050565b60008161155e57506000611800565b60405163b3d7f6b960e01b81526000906001600160a01b0385169063b3d7f6b99061158d908690600401612747565b60206040518083038186803b1580156115a557600080fd5b505afa1580156115b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dd9190611fbb565b60010190506000846001600160a01b03166338d52e0f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561161d57600080fd5b505afa158015611631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116559190611c82565b9050611662868284611348565b61166d818684611807565b6040516394bf804d60e01b81526000906001600160a01b038716906394bf804d9061169e9088903090600401612750565b602060405180830381600087803b1580156116b857600080fd5b505af11580156116cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f09190611fbb565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611720919061215f565b60206040518083038186803b15801561173857600080fd5b505afa15801561174c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117709190611fbb565b905080156117fa5760405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906117a6908b90859060040161218d565b602060405180830381600087803b1580156117c057600080fd5b505af11580156117d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f89190611d41565b505b50925050505b9392505050565b604051636eb1769f60e11b815281906001600160a01b0385169063dd62ed3e906118379030908790600401612173565b60206040518083038186803b15801561184f57600080fd5b505afa158015611863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118879190611fbb565b10156113115760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906110289085906000199060040161218d565b6118cc814710156101a36102ce565b6000826001600160a01b0316826040516118e59061215c565b60006040518083038185875af1925050503d8060008114611922576040519150601f19603f3d011682016040523d82523d6000602084013e611927565b606091505b50509050611311816101a46102ce565b600061194684841115836102ce565b5050900390565b6060825167ffffffffffffffff8111801561196757600080fd5b506040519080825280602002602001820160405280156119a157816020015b61198e611aea565b8152602001906001900390816119865790505b50905060005b8351811015611a39576040805160a0810190915280600381526020018583815181106119cf57fe5b60200260200101516001600160a01b031681526020018483815181106119f157fe5b60200260200101518152602001866001600160a01b03168152602001306001600160a01b0316815250828281518110611a2657fe5b60209081029190910101526001016119a7565b50611a42610c71565b6001600160a01b0316630e8e3e84826040518263ffffffff1660e01b8152600401611a6d919061222b565b600060405180830381600087803b158015611a8757600080fd5b505af1158015611a9b573d6000803e3d6000fd5b5050505050505050565b600080838386818110611ab457fe5b905060200201356000039050611acb87878361154f565b50611ade86611ad8610c71565b83611807565b50309695505050505050565b6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b60008083601f840112611b2b578182fd5b50813567ffffffffffffffff811115611b42578182fd5b6020830191508360208083028501011115611b5c57600080fd5b9250929050565b600082601f830112611b73578081fd5b813567ffffffffffffffff811115611b89578182fd5b611b9c601f8201601f19166020016127ec565b9150808252836020828501011115611bb357600080fd5b8060208401602084013760009082016020015292915050565b8035611342816128aa565b80356002811061134257600080fd5b600060808284031215611bf7578081fd5b50919050565b600060808284031215611c0e578081fd5b611c1860806127ec565b90508135611c25816128aa565b81526020820135611c35816128bf565b60208201526040820135611c48816128aa565b60408201526060820135611c5b816128bf565b606082015292915050565b600060208284031215611c77578081fd5b8135611800816128aa565b600060208284031215611c93578081fd5b8151611800816128aa565b60006020808385031215611cb0578182fd5b825167ffffffffffffffff80821115611cc7578384fd5b818501915085601f830112611cda578384fd5b815181811115611ce8578485fd5b8381029150611cf88483016127ec565b8181528481019084860184860187018a1015611d12578788fd5b8795505b83861015611d34578051835260019590950194918601918601611d16565b5098975050505050505050565b600060208284031215611d52578081fd5b8151611800816128bf565b60008060008060808587031215611d72578283fd5b843593506020850135611d84816128aa565b92506040850135611d94816128aa565b9150606085013567ffffffffffffffff811115611daf578182fd5b611dbb87828801611be6565b91505092959194509250565b60008060008060808587031215611d72578182fd5b600080600060608486031215611df0578081fd5b8335611dfb816128aa565b92506020840135611e0b816128aa565b929592945050506040919091013590565b60008060008060008060008060006101208a8c031215611e3a578687fd5b611e448b8b611bd7565b985060208a013567ffffffffffffffff80821115611e60578889fd5b611e6c8d838e01611b1a565b909a50985060408c0135915080821115611e84578687fd5b611e908d838e01611b1a565b9098509650869150611ea58d60608e01611bfd565b955060e08c0135915080821115611eba578485fd5b50611ec78c828d01611b1a565b9a9d999c50979a969995989497966101000135949350505050565b60008060008060e08587031215611ef7578182fd5b843567ffffffffffffffff80821115611f0e578384fd5b9086019060c08289031215611f21578384fd5b611f2b60c06127ec565b82358152611f3c8960208501611bd7565b60208201526040830135611f4f816128aa565b6040820152611f618960608501611bcc565b60608201526080830135608082015260a083013582811115611f81578586fd5b611f8d8a828601611b63565b60a083015250809650505050611fa68660208701611bfd565b939693955050505060a08201359160c0013590565b600060208284031215611fcc578081fd5b5051919050565b6001600160a01b03169052565b60008284526020808501945082825b8581101561201d578135612002816128aa565b6001600160a01b031687529582019590820190600101611fef565b509495945050505050565b60008284526020808501945082825b8581101561201d57813587529582019590820190600101612037565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60006120898283612813565b6080855261209b608086018284611fe0565b91505060206120ac81850185612813565b868403838801528084526001600160fb1b038111156120c9578485fd5b8202808285850137808401935050508082018381526120eb604086018661285b565b83888603016040890152612100838284612053565b9450505050506060830135612114816128bf565b8015156060860152508091505092915050565b80516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156121e75783516001600160a01b0316835292840192918401916001016121c2565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156121e75783518352928401929184019160010161220f565b602080825282518282018190526000919060409081850190868401855b828110156122b557815180516004811061225e57fe5b85528087015161227088870182611fd3565b50858101518686015260608082015161228b82880182611fd3565b5050608090810151906122a086820183611fd3565b505060a0939093019290850190600101612248565b5091979650505050505050565b8481526001600160a01b038481166020830152831660408201526080606082018190526000906122f49083018461207d565b9695505050505050565b6000610120820161230e8c6128a0565b8b83526101206020840152808a82526101408401905061014060208c0285010191508b835b8c8110156123bb5785840361013f190183528135368f9003609e19018112612359578586fd5b8e810190508035855260208101356020860152604081013560408601526060810135606086015261238d608082018261285b565b915060a060808701526123a460a087018383612053565b955050506020928301929190910190600101612333565b50505082810360408401526123d181898b611fe0565b90506123e06060840188612127565b82810360e08401526123f3818688612028565b915050826101008301529a9950505050505050505050565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6020808252601f908201527f43616c6c6572206973206e6f74207468652070656e64696e67206f776e657200604082015260600190565b60208082526027908201527f43616e6e6f742073656e6420746f206f722066726f6d20696e7465726e616c2060408201526662616c616e636560c81b606082015260800190565b60208082526021908201527f43616e6e6f742073656e642066726f6d20696e7465726e616c2062616c616e636040820152606560f81b606082015260800190565b6020808252602c908201527f446f6573206e6f7420726571756972652045524334363236207772617070696e60408201526b672f756e7772617070696e6760a01b606082015260800190565b60208082526018908201527f5661756c7420616c726561647920726567697374657265640000000000000000604082015260600190565b6020808252600e908201526d24b73b30b634b21039b2b73232b960911b604082015260600190565b60208082526014908201527315985d5b1d081b9bdd081c9959da5cdd195c995960621b604082015260600190565b6020808252601d908201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604082015260600190565b6020808252601e908201527f4e6577206f776e6572206973207468652063757272656e74206f776e65720000604082015260600190565b6020808252601f908201527f43616e6e6f742073656e6420746f20696e7465726e616c2062616c616e636500604082015260600190565b600060e08252855160e083015260208087015161269b816128a0565b61010084015260408701516001600160a01b03908116610120850152606088015116610140840152608087015161016084015260a087015160c061018085015280516101a08501819052835b81811015612704578281018401518682016101c0015283016126e7565b8181111561271657846101c083880101525b50601f01601f191684016101c0019250612734905081840187612127565b5060a082019390935260c0015292915050565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b6000808335601e1984360301811261279c578283fd5b83018035915067ffffffffffffffff8211156127b6578283fd5b6020908101925081023603821315611b5c57600080fd5b60008235609e198336030181126127e2578182fd5b9190910192915050565b60405181810167ffffffffffffffff8111828210171561280b57600080fd5b604052919050565b6000808335601e19843603018112612829578283fd5b830160208101925035905067ffffffffffffffff81111561284957600080fd5b602081023603831315611b5c57600080fd5b6000808335601e19843603018112612871578283fd5b830160208101925035905067ffffffffffffffff81111561289157600080fd5b803603831315611b5c57600080fd5b6002811061132757fe5b6001600160a01b038116811461132757600080fd5b801515811461132757600080fdfea2646970667358221220d9b8c3072f63fb8d2ef69975f9b42c84f17fd657ecbc1c253e529840cbd34c3e64736f6c63430007010033";

type ERC4626RelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC4626RelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC4626Relayer__factory extends ContractFactory {
  constructor(...args: ERC4626RelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ERC4626Relayer> {
    return super.deploy(vault, overrides || {}) as Promise<ERC4626Relayer>;
  }
  override getDeployTransaction(
    vault: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, overrides || {});
  }
  override attach(address: string): ERC4626Relayer {
    return super.attach(address) as ERC4626Relayer;
  }
  override connect(signer: Signer): ERC4626Relayer__factory {
    return super.connect(signer) as ERC4626Relayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC4626RelayerInterface {
    return new utils.Interface(_abi) as ERC4626RelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC4626Relayer {
    return new Contract(address, _abi, signerOrProvider) as ERC4626Relayer;
  }
}
